/* ========================================================
* 哈尔滨富利通科技有限公司研发二部
* 日 期：2018-5-19
* 功能：
* 作 者：赵斌
* 版 本：1.0.0
* =========================================================
*/
package com.cmts.xm.web.member;

import java.net.URLDecoder;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cmts.xm.bean.table.common.JsonBean;
import com.cmts.xm.bean.table.member.C0001_MEM_ACCOUNT;
import com.cmts.xm.bean.table.member.C0002_MEM_DAYBOOK;
import com.cmts.xm.bean.table.member.C0003_MEM_MEMBER;
import com.cmts.xm.bean.vo.ResultVo;
import com.cmts.xm.dao.util.DateUtil;
import com.cmts.xm.service.common.CommonService;
import com.cmts.xm.service.member.MemberRegisterService;
@SuppressWarnings({ "all" })
@Controller
@RequestMapping(value = "/")
public class MemberRegisterInsert {
	private static Logger log = Logger.getLogger(MemberRegisterInsert.class);
	@Autowired
	private CommonService commonservice;
	@Autowired
	private MemberRegisterService memberregisterservice;
	/**
	 * 
	 * @Title:        placeOrders 
	 * @Description:  会员注册（注册、开户、开卡、快速开卡） 
	 * @param:        @param request
	 * @param:        @param response
	 * @param:        @return    
	 * @return:       String    
	 * @throws 
	 * @author        赵斌
	 * @Date          2018-5-19 上午10:47:29
	 */
	@RequestMapping(value = "/memberregisterinsert" , produces = "application/json; charset=utf-8")
	public @ResponseBody String placeOrders(HttpServletRequest request, HttpServletResponse response){
		ResultVo vo = new ResultVo();
		
		try {
			String postdata = URLDecoder.decode(request.getParameter("postdata"), "UTF-8");
			
			log.info("传入参数__postdata=" + postdata);
			
			if(null == postdata || "".equals(postdata)){
				log.error("缺少相应参数__postdata=" + postdata);
				vo.setResultcode("1001002");
				vo.setResultmsg("缺少相应参数__postdata=" + postdata);
				return JSONObject.fromObject(vo).toString();
			}
			
			JsonBean jsonbean = (JsonBean) JSONObject.toBean(JSONObject.fromObject(postdata), JsonBean.class);
			String placeno = jsonbean.getPlaceno();
			String verifyInfo = jsonbean.getVerifyInfo();
			String opttype = jsonbean.getOpttype();
			
			boolean check = DateUtil.validationDate(placeno, verifyInfo);
			if(check!=true){
				log.error("验证失败");
				vo.setResultcode("10012");
				vo.setResultmsg("验证失败");
				return JSONObject.fromObject(vo).toString();
			}
			
			boolean cinemacount = commonservice.selectCinemaNo(placeno);
			if(cinemacount){
				log.error("电影院不存在");
				vo.setResultcode("100104");
				vo.setResultmsg("电影院不存在");
				return JSONObject.fromObject(vo).toString();
			}
			
			String flag = memberregisterservice.memberRegister(jsonbean);
			if(StringUtils.isNotBlank(flag) && flag.equals("-1")){
				log.info("操作失败");
				vo.setResultcode("1");
				vo.setResultmsg("操作失败");
			}
			
			log.info("操作成功");
			vo.setResultcode("0");
			vo.setResultmsg("操作成功");
			vo.getResultMap().put("serialnumber", flag);
		} catch (Exception e) {
			log.error(e.getMessage());
			vo.setResultcode("1001001");
			vo.setResultmsg("接口异常:" + e.getMessage());
		}
		
		return JSONObject.fromObject(vo).toString();
	}
	public static void main(String[] args) {
		String opttype="001";
		System.out.println(opttype.substring(0,1));
		System.out.println(opttype.substring(1,2));
		System.out.println(opttype.substring(2,3));
		System.out.println(opttype.substring(0,1).equals("1"));
		System.out.println(opttype.substring(1,2).equals("1"));
		System.out.println(opttype.substring(2,3).equals("1"));
	}
}

